name: Compatibility-Check

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"   # every day at 03:00 UTC

jobs:
  api-compatibility:
    name: API Compatibility Check
    runs-on: windows-latest # yes, we need windows, cause can't build LDM on Linux, it can't install .NET 4.8.
    
    steps:
      - name: Checkout current fork
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          
      - name: Checkout original repository
        uses: actions/checkout@v5
        with:
          repository: SmartlyDressedGames/Legally-Distinct-Missile
          path: original-repo
          fetch-depth: 0
          
      - uses: actions/setup-dotnet@v4
        name: Setup .NET
        with:
          dotnet-version: 8.x
          
      - name: Build current fork (RocketModFix)
        run: |
          dotnet restore Rocket/Rocket.API/Rocket.API.csproj
          dotnet restore Rocket/Rocket.Core/Rocket.Core.csproj
          dotnet restore Rocket.Unturned/Rocket.Unturned.csproj
          dotnet build Rocket/Rocket.API/Rocket.API.csproj --configuration Release --no-restore
          dotnet build Rocket/Rocket.Core/Rocket.Core.csproj --configuration Release --no-restore
          dotnet build Rocket.Unturned/Rocket.Unturned.csproj --configuration Release --no-restore
          
      - name: Build original repository (Legally-Distinct-Missile)
        run: |
          cd original-repo
          dotnet build Rocket/Rocket.API/Rocket.API.csproj --configuration Release --verbosity minimal
          dotnet build Rocket/Rocket.Core/Rocket.Core.csproj --configuration Release --verbosity minimal
          dotnet build Rocket.Unturned/Rocket.Unturned.csproj --configuration Release --verbosity minimal
          
      - name: Verify assemblies exist
        shell: cmd
        run: |
          echo "=== Checking if assemblies exist ==="
          if exist "Rocket\Rocket.API\bin\Release\net461\Rocket.API.dll" (
            echo "✅ Rocket.API.dll exists"
          ) else (
            echo "❌ Rocket.API.dll not found"
            dir Rocket\Rocket.API\bin\Release\net461\
            exit /b 1
          )
          
          if exist "Rocket\Rocket.Core\bin\Release\net461\Rocket.Core.dll" (
            echo "✅ Rocket.Core.dll exists"
          ) else (
            echo "❌ Rocket.Core.dll not found"
            dir Rocket\Rocket.Core\bin\Release\net461\
            exit /b 1
          )
          
          if exist "Rocket.Unturned\bin\Release\net461\Rocket.Unturned.dll" (
            echo "✅ Rocket.Unturned.dll exists"
          ) else (
            echo "❌ Rocket.Unturned.dll not found"
            dir Rocket.Unturned\bin\Release\net461\
            exit /b 1
          )
          
          if exist "original-repo\Rocket\Rocket.API\bin\Release\Rocket.API.dll" (
            echo "✅ Original Rocket.API.dll exists"
          ) else (
            echo "❌ Original Rocket.API.dll not found"
            dir original-repo\Rocket\Rocket.API\bin\Release\
            exit /b 1
          )
          
          if exist "original-repo\Rocket\Rocket.Core\bin\Release\Rocket.Core.dll" (
            echo "✅ Original Rocket.Core.dll exists"
          ) else (
            echo "❌ Original Rocket.Core.dll not found"
            dir original-repo\Rocket\Rocket.Core\bin\Release\
            exit /b 1
          )
          
          if exist "original-repo\Rocket.Unturned\bin\Release\Rocket.Unturned.dll" (
            echo "✅ Original Rocket.Unturned.dll exists"
          ) else (
            echo "❌ Original Rocket.Unturned.dll not found"
            dir original-repo\Rocket.Unturned\bin\Release\
            exit /b 1
          )
          
      - name: Install API compatibility tools
        run: |
          dotnet tool install --global Microsoft.DotNet.ApiCompat.Tool
          
      - name: Copy suppression file from repository
        run: |
          copy .github\workflows\api-suppressions.xml api-suppressions.xml

      - name: Generate suppression file for all breaking changes
        shell: cmd
        run: |
          echo "Generating suppression file for all breaking changes..."
          apicompat ^
            --left ./original-repo/Rocket/Rocket.API/bin/Release/Rocket.API.dll ^
            --right ./Rocket/Rocket.API/bin/Release/net461/Rocket.API.dll ^
            --left ./original-repo/Rocket/Rocket.Core/bin/Release/Rocket.Core.dll ^
            --right ./Rocket/Rocket.Core/bin/Release/net461/Rocket.Core.dll ^
            --left ./original-repo/Rocket.Unturned/bin/Release/Rocket.Unturned.dll ^
            --right ./Rocket.Unturned/bin/Release/net461/Rocket.Unturned.dll ^
            --generate-suppression-file ^
            --suppression-output-file ./generated-api-suppressions.xml
      
          echo "=== GENERATED SUPPRESSION FILE ==="
          type generated-api-suppressions.xml
          echo.
          echo "=== END OF GENERATED FILE ==="
          
      - name: Upload generated suppression file
        uses: actions/upload-artifact@v4
        with:
          name: generated-api-suppressions
          path: ./generated-api-suppressions.xml
          
      - name: Check API compatibility with repository suppressions
        shell: cmd
        run: |
          echo "Checking API compatibility using repository suppression file..."
          apicompat ^
            --left ./original-repo/Rocket/Rocket.API/bin/Release/Rocket.API.dll ^
            --right ./Rocket/Rocket.API/bin/Release/net461/Rocket.API.dll ^
            --left ./original-repo/Rocket/Rocket.Core/bin/Release/Rocket.Core.dll ^
            --right ./Rocket/Rocket.Core/bin/Release/net461/Rocket.Core.dll ^
            --left ./original-repo/Rocket.Unturned/bin/Release/Rocket.Unturned.dll ^
            --right ./Rocket.Unturned/bin/Release/net461/Rocket.Unturned.dll ^
            --suppression-file ./api-suppressions.xml > ./api-compat-report.txt 2>&1 || (
            echo "❌ API compatibility check failed - breaking changes detected!"
            echo "Download the generated-api-suppressions artifact and add needed suppressions to .github/workflows/api-suppressions.xml"
            type api-compat-report.txt
            exit /b 1
          )
          echo "✅ API compatibility check passed"
            
      - name: Upload compatibility report
        uses: actions/upload-artifact@v4
        with:
          name: api-compatibility-report
          path: ./api-compat-report.txt
          
  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1